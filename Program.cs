// input - файл, содержащий вопросы и верные ответы, следующего формата:
// Q: Вопрос.
// +: Верный ответ
// после ":" пробел может отсутствовать.
// в файле могут присутствовать пустые строки
// несколько вопросов или несколько ответов не могут идти подряд.

// output - файл, содержащий вопросы, верные варианты ответов, неверные варианты ответов, следующего формата:
// Q: Вопрос.
// +: Верный ответ
// -: Неверный ответ
// -: Неверный ответ
// -: Неверный ответ
// -: Неверный ответ
// после ":" пробел.
// между вопросами одна пустая строки

// Параметры:
// -i, --input входной файл;
// -o, --output выходной файл;
// -a, --answers необходимое количество вариантов ответов;
// -h, --help вывести справку (текс из самой программы, в будкщем,возможно, из отдельного файла).

//TODO учитывать, что на вход может подаваться вопрос с несколькими правильными вариантами ответов.
//TODO add docopt
//TODO add tests (NUnit)
//TODO multilang?
//TODO сохранять по умолчанию в файл, stdout по отдельному ключу
//TODO хорошо подумать о переводе на dotnet core

using System;

namespace iag4t
{
	class MainClass
	{
		public static void Main(string[] args)
		{
			// TODO Распарсить вывод командной строки и передать значения в конструктор AG
			// выполнить все проверки на корректность, формат и существование
			// var AG = new AnswerGenerator(args[0], "", 5);

			var AG = new AnswerGenerator("input", "output", 5);

			AG.Read_From_File();
			AG.Generate_Answers();
			AG.Save_Tests_To_File();

		}


	}
}
